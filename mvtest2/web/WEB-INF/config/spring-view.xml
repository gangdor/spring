<?xml version="1.0" encoding="UTF-8"?>
 <!-- beans란?
 # ========================================================================================================
 #   beans는 스프링 컨테이너가 사용할 환경설정 정보를 담고 있는 XML파일의 루트 태그이며, 태그의 속성으로 스프링이 사용할 라이브러리를 정의한다.
 # ========================================================================================================
 -->
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:context="http://www.springframework.org/schema/context" 
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" 
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       ">
   <context:component-scan base-package="com.*"/>
   <aop:aspectj-autoproxy></aop:aspectj-autoproxy>
   <tx:annotation-driven transaction-manager="txManager"/> 
   
 <!-- bean이란?
# ========================================================================================================
#   bean이란 객체 생성 태그로 서버 시작시 미리 객체를 미리 만들어두어 효율성을 높이기 위한 용도
#   <사용법>
#       <bean id="아이디" class="클래스">
#          <constructor-arg value="값"/>
#          <constructor-arg ref="참조값"/>
#      </bean>
#   교제 p57 : bean의 id는 생략이 가능하지만 class는 생략 불가능 
#   https://blog.naver.com/4rchive_7/221228506265 
#
#   클래스를 직접 만들어 사용하고 싶다면 57~58페이지 참고
#
#   자세한 내용(HashMap과 같은 경우로 나와 있음)은 아래를 참조하자
#   http://noritersand.tistory.com/152#beans
# ========================================================================================================
 -->
   <!--어노테이션을 사용하려면 여기를 설정해줘야함  -->
<!-- ViewResolver
 # ========================================================================================================
 #   Controller에서 Spring 타입의 함수 호출시 return "jsp명";(.jsp필요없음)만 써도 되는 이유
 #   여기서 order가 0이라는 뜻은 우선수위가 0번(가장 높은 우선순위)이라는 뜻
 #   넘어오는 파일이 jsp가 아닐 수도 있기 때문에 order를 꼭 지정해주자!
 # ========================================================================================================
 -->
    <!-- ViewResolver -->
    <bean id="viewResolver" 
    class="org.springframework.web.servlet.view.InternalResourceViewResolver">
       <property name="prefix" value="/view/"/>
       <property name="suffix" value=".jsp"/>
       <property name="order" value="0"/>
    </bean>
    <!-- 다국어 처리 -->    
    <bean id="messageSource" 
    class="org.springframework.context.support.ResourceBundleMessageSource">
       <property name="basenames">
          <list>
             <value>messages/messages</value>
          </list>
       </property>
    </bean>   
    <!-- File Upload -->
    <bean id="multipartResolver"
       class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
       <property name="maxUploadSize" value="500000000"/>
   </bean>
    
    
     <!-- 1. Database Setting -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
       <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
       <property name="url" value="jdbc:oracle:thin:@70.12.114.149:1521:xe"/><!-- 내 IP로 바꾸기 -->
       <property name="username" value="shop"/>
       <property name="password" value="111111"/>
    </bean>

    <!-- 2. Transaction Setting -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
       <property name="dataSource" ref="dataSource"/>
    </bean>
    
    <!-- 3. MyBatis Setting -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
       <property name="dataSource" ref="dataSource"/>
       <property name="configLocation" value="classpath:com/config/mybatis.xml"/>
    </bean>
    <!-- 4. Spring Mybatis Connect -->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
       <constructor-arg ref="sqlSessionFactory"/>
    </bean>
    <!-- 5. Mapper Setting -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
       <property name="basePackage" value="com.hw.mapper"/>
    </bean> 
</beans>








